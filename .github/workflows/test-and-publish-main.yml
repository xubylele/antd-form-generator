name: Test → Build → Publish (npm)

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "package.json"
      - "package-lock.json"
      - "tsconfig.json"
      - "tsup.config.ts"

jobs:
  test_build_publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Install
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Gather version info
        id: info
        run: |
          NAME=$(node -p "require('./package.json').name")
          VER=$(node -p "require('./package.json').version")
          echo "name=$NAME" >> "$GITHUB_OUTPUT"
          echo "version=$VER" >> "$GITHUB_OUTPUT"
          if [[ "$VER" == *"-"* ]]; then
            echo "tag=next" >> "$GITHUB_OUTPUT"
          else
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          fi

      - name: Skip if version already exists
        id: skip
        run: |
          PUBLISHED=$(npm view "${{ steps.info.outputs.name }}@${{ steps.info.outputs.version }}" version || true)
          if [ "$PUBLISHED" = "${{ steps.info.outputs.version }}" ]; then
            echo "already=true" >> "$GITHUB_OUTPUT"
          else
            echo "already=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish to npm
        if: steps.skip.outputs.already == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --tag ${{ steps.info.outputs.tag }}
